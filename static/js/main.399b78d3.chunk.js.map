{"version":3,"sources":["rainbow.jpg","home/flowers.jpg","home/peaches.jpg","home/pastries.jpg","home/waffles.jpg","home/coffee.jpeg","home/makeup.jpg","home/hiking.jpg","home/baloon.jpeg","home/ferriswheel.jpg","home/beach.jpg","Yelp/yelp.js","business/business.js","results/results.js","Maps/maps.js","businessSearch/businessSearch.js","Yelp/CurrentYelp.js","searchnearme/searchnearme.js","home/home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Yelp","search","term","location","sortBy","fetch","headers","Authorization","then","response","json","jsonResponse","businesses","map","business","id","imageSrc","image_url","name","address","address1","city","state","zipCode","zip_code","category","categories","title","rating","reviewCount","review_count","latitude","coordinates","longitude","url","phone","display_phone","distance","price","transactions","className","src","this","props","href","toUpperCase","React","Component","results","key","mapStyles","position","width","height","CurrentLocation","initialCenter","lat","lng","currentLocation","prevProps","prevState","google","loadMap","recenterMap","current","maps","center","LatLng","panTo","centerAroundCurrentLocation","navigator","geolocation","getCurrentPosition","pos","coords","setState","mapRef","refs","node","ReactDOM","findDOMNode","zoom","mapConfig","Object","assign","Map","children","Children","c","cloneElement","mapCenter","style","ref","renderChildren","defaultProps","visible","businessSearch","onMarkerClick","marker","e","selectedPlace","activeMarker","showingInfoWindow","onClose","region","updateMap","searchYelp","bind","handleTermChange","handleLocationChange","handleSearch","handleSortByChange","sortByOptions","sortByOption","event","target","value","preventDefault","keys","sortByOptionValue","getSortByClass","onClick","renderCenter","split","defaultSize","placeholder","onChange","renderSortByOptions","GoogleApiWrapper","apiKey","CurrentYelp","searchnearme","getCoordinates","alert","Home","exact","path","component","class","flowers","alt","pastries","coffee","peaches","waffles","makeup","hiking","beach","baloon","ferriswheel","to","App","rainbow","home","Boolean","window","hostname","match","render","document","getElementById","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.399b78d3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/rainbow.2ec49e8c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/flowers.4572aa03.jpg\";","module.exports = __webpack_public_path__ + \"static/media/peaches.b83a8467.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pastries.2d8327be.jpg\";","module.exports = __webpack_public_path__ + \"static/media/waffles.9e4d40e7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/coffee.35d4d548.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/makeup.31518203.jpg\";","module.exports = __webpack_public_path__ + \"static/media/hiking.7606a29b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/baloon.e509710d.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/ferriswheel.5269480d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/beach.240fbf5b.jpg\";","const apiKey = 'X7kF378rDNoIOuIImg6BmZhQIzCv8uxYMQ4f721NMU2K2XRSX1gSOOGf85lY-1VufBz0H0JsJiPlOAZQ396Vnc9duDqxfkJowmwrINUoLWiGBlHqY1Z2JnDf4NlSXnYx';\n\nconst Yelp = {\n    search(term, location, sortBy) {\n        return fetch(`https://cors-anywhere.herokuapp.com/https://api.yelp.com/v3/businesses/search?term=${term}&location=${location}&sort_by=${sortBy}`, {\n            headers: {\n                Authorization: `Bearer ${apiKey}`\n            }\n        })\n            .then(response => {\n                return response.json();\n            }).then(jsonResponse => {\n                if (jsonResponse.businesses) {\n                    return jsonResponse.businesses.map(business => ({\n                        id: business.id,\n                        imageSrc: business.image_url,\n                        name: business.name,\n                        address: business.location.address1,\n                        city: business.location.city,\n                        state: business.location.state,\n                        zipCode: business.location.zip_code,\n                        category: business.categories[0].title,\n                        rating: business.rating,\n                        reviewCount: business.review_count,\n                        latitude: business.coordinates.latitude,\n                        longitude: business.coordinates.longitude,\n                        url: business.url,\n                        phone: business.display_phone,\n                        distance: business.distance,\n                        price: business.price,\n                        transactions: business.transactions\n                    })\n                    );\n                }\n            });\n\n\n    }\n}\n\nexport default Yelp;\n","import React from 'react';\nimport './business.css';\n\nclass business extends React.Component {\n  render() {\n    return (\n      <div className=\"Business\">\n                <div className=\"image-container\">\n                    <img src={this.props.business.imageSrc} />\n                </div>\n              <div className=\"Business-information\">\n                 <a href={this.props.business.url}>\n                    <h3>{this.props.business.name.toUpperCase()}</h3>\n                  </a>\n                  <p>{this.props.business.address}, {this.props.business.city}, {`${this.props.business.state} ${this.props.business.zipCode}`}</p>\n                  <p>Rating: {this.props.business.rating}/5 Stars</p>\n                  <p>{this.props.business.phone}</p>\n                  <p>{this.props.business.price}</p>\n              </div>\n\n      </div>\n    );\n  };\n} \nexport default business;","import React from 'react';\nimport './results.css';\nimport Business from '../business/business.js'; \n\nclass results extends React.Component {\n    render() {\n      return (\n        <div className=\"results\">\n          {\n            this.props.businesses.map(business => {\n              return <Business business={business} key={business.id} />\n            })\n          }\n        </div>\n      );\n    }\n  }\n  \n  export default results;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nconst mapStyles = {\n  map: {\n    position: 'absolute',\n    width: '100%',\n    height: '100%'\n  }\n};\n\nexport class CurrentLocation extends React.Component {\n    constructor(props) {\n        super(props);\n    \n        const { lat, lng } = this.props.initialCenter;\n        this.state = {\n          currentLocation: {\n            lat: lat,\n            lng: lng\n          }\n        };\n      }\n      componentDidUpdate(prevProps, prevState) {\n        if (prevProps.google !== this.props.google) {\n          this.loadMap();\n        }\n        if (prevState.currentLocation !== this.state.currentLocation) {\n          this.recenterMap();\n        }\n      }\n\n      recenterMap() {\n        const map = this.map;\n        const current = this.state.currentLocation;\n    \n        const google = this.props.google;\n        const maps = google.maps;\n    \n        if (map) {\n          let center = new maps.LatLng(current.lat, current.lng);\n          map.panTo(center);\n        }\n      }\n\n      componentDidMount() {\n        if (this.props.centerAroundCurrentLocation) {\n          if (navigator && navigator.geolocation) {\n            navigator.geolocation.getCurrentPosition(pos => {\n              const coords = pos.coords;\n              this.setState({\n                currentLocation: {\n                  lat: coords.latitude,\n                  lng: coords.longitude\n                }\n              });\n            });\n          }\n        }\n        this.loadMap();\n      }\n\n      loadMap() {\n        if (this.props && this.props.google) {\n          // checks if google is available\n          const { google } = this.props;\n          const maps = google.maps;\n    \n          const mapRef = this.refs.map;\n    \n          // reference to the actual DOM element\n          const node = ReactDOM.findDOMNode(mapRef);\n    \n          let { zoom } = this.props;\n          const { lat, lng } = this.state.currentLocation;\n          const center = new maps.LatLng(lat, lng);\n          const mapConfig = Object.assign(\n            {},\n            {\n              center: center,\n              zoom: zoom\n            }\n          );\n    \n          // maps.Map() is constructor that instantiates the map\n          this.map = new maps.Map(node, mapConfig);\n        }\n      }\n      \n      renderChildren() {\n        const { children } = this.props;\n    \n        if (!children) return;\n    \n        return React.Children.map(children, c => {\n          if (!c) return;\n          return React.cloneElement(c, {\n            map: this.map,\n            google: this.props.google,\n            mapCenter: this.state.currentLocation\n          });\n        });\n      }\n      \n      render() {\n        const style = Object.assign({}, mapStyles.map);\n       return (\n         <div>\n           <div style={style} ref=\"map\">\n             Loading map...\n           </div>\n           {this.renderChildren()}\n         </div>\n       );\n     }\n}\nexport default CurrentLocation;\n\nCurrentLocation.defaultProps = {\n  zoom: 14,\n  initialCenter: {\n    lat: -1.2884,\n    lng: 36.8233\n  },\n  centerAroundCurrentLocation: false,\n  visible: true\n};","import React, { Component } from \"react\";\nimport Yelp from '../Yelp/yelp.js';\nimport Results from \"../results/results.js\";\nimport './businessSearch.css';\nimport '../SearchBar/searchbar.css';\nimport SplitPane from 'react-split-pane';\nimport { Map, GoogleApiWrapper, InfoWindow, Marker } from 'google-maps-react';\nimport CurrentLocation from '../Maps/maps.js';\n\nconst mapStyles = {\n  width: '100%',\n  height: '100%'\n}\n\nexport class businessSearch extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      businesses: [],\n      region: [],\n      updateMap: false,\n      latitude: -1.2884,\n      longitude: 36.8233,\n      term: '',\n      location: 'New York City',\n      sortBy: 'best_match',\n      showingInfoWindow: false, \n      activeMarker: {},          \n      selectedPlace: {}\n    };\n\n    this.searchYelp = this.searchYelp.bind(this);\n    this.handleTermChange = this.handleTermChange.bind(this);\n    this.handleLocationChange = this.handleLocationChange.bind(this);\n    this.handleSearch = this.handleSearch.bind(this);\n    this.handleSortByChange = this.handleSortByChange.bind(this);\n    this.onMarkerClick = this.onMarkerClick.bind(this);\n\n    this.sortByOptions = {\n      'Best Match': 'best_match',\n      'Highest Rated': 'rating',\n      'Most Reviewed': 'review_count',\n      'Distance': 'distance'\n    };\n  }\n  /* Google Maps functions */\n  onMarkerClick = (props, marker, e) =>\n  this.setState({\n    selectedPlace: props,\n    activeMarker: marker,\n    showingInfoWindow: true\n  });\n  onClose = props => {\n    if (this.state.showingInfoWindow) {\n      this.setState({\n        showingInfoWindow: false,\n        activeMarker: null\n      });\n    }\n  };\n  /* Yelp functions */\n  searchYelp(term, location, sortBy) {\n    Yelp.search(term, location, sortBy).then((businesses) => {\n      this.setState({\n        businesses: businesses,\n        latitude: businesses[0].latitude,\n        longitude: businesses[0].longitude\n      });\n    })    \n    \n  };\n\n  /* Search Bar functions */\n  getSortByClass(sortByOption) {\n    if (this.state.sortBy === sortByOption) {\n      return 'active';\n    }\n    return '';\n  }\n  handleSortByChange(sortByOption) {\n    this.setState({sortBy: sortByOption});\n  }\n  handleTermChange(event) {\n    this.setState({term: event.target.value});\n  }\n  handleLocationChange(event) {\n    this.setState({location: event.target.value});\n  }\n  handleSearch(event) {\n    this.searchYelp(this.state.term, this.state.location, this.state.sortBy);\n    this.setState({updateMap: true, latitude: this.state.latitude, longitude: this.state.longitude});\n    event.preventDefault();\n  }\n\n  renderSortByOptions() {\n    return Object.keys(this.sortByOptions).map(sortByOption => {\n      let sortByOptionValue = this.sortByOptions[sortByOption];\n      return (<ul> <button className={this.getSortByClass(sortByOptionValue)}\n                  key={sortByOptionValue}\n                  onClick={this.handleSortByChange.bind(this, sortByOptionValue)}>\n                {sortByOption}\n             </button> </ul>);\n    });\n  }\n  renderCenter(){\n      return (\n        <Map \n          google={this.props.google}\n          zoom={14}\n          style={mapStyles}\n          center= {{lat: this.state.latitude, lng: this.state.longitude}}\n        >\n        {(this.state.businesses.map(business =>{\n           return(\n            <Marker key={business}\n              onClick={this.onMarkerClick}\n              name={business.name}\n              position={{lat: business.latitude, lng: business.longitude}}\n            >\n            </Marker>\n            )\n        }\n      ))}\n        <InfoWindow\n          marker={this.state.activeMarker}\n          visible={this.state.showingInfoWindow}\n          onClose={this.onClose}\n        >\n          <div>\n            <a>{this.state.selectedPlace.name}</a>\n          </div>\n        </InfoWindow>\n      </Map>\n      );\n  }\n\n  render() {\n      const updateMap = this.state.updateMap;\n      let map;\n\n      /* Conditional Rendering the map from current location to inputed location */\n        if(updateMap){\n          map = (\n            <Map\n                google={this.props.google}\n                zoom={14}\n                style={mapStyles}\n                >\n                {this.renderCenter()}\n            </Map>\n          )\n\n        } \n        else{map = (\n          <CurrentLocation\n              google={this.props.google}\n              centerAroundCurrentLocation\n              style={mapStyles}\n              >\n              <Marker\n                onClick={this.onMarkerClick}\n                name={'current location'}\n              />\n              <InfoWindow\n                marker={this.state.activeMarker}\n                visible={this.state.showingInfoWindow}\n                onClose={this.onClose}\n              >\n                <div>\n                  <a>{this.state.selectedPlace.name}</a>\n                </div>\n              </InfoWindow>\n          </CurrentLocation>\n          );\n        }\n      \n\n      return(\n        <div className=\"businessSearch\">\n            \n        <SplitPane split=\"vertical\" defaultSize={700} >\n\n          {/* Main text */}\n          <div className=\"businessSearch-description\">\n            <h2>SEARCH BY LOCATION</h2>\n\n          {/* SEARCH BAR */}\n            <div className=\"SearchBar\">\n              <div className=\"SearchBar-fields\">\n                <ul>\n                  <input placeholder=\"Search Businesses\" onChange={this.handleTermChange} />\n                  <p> </p>\n                  <input placeholder=\"Where?\" onChange={this.handleLocationChange}/>\n                </ul>\n              </div>\n              <div className=\"SearchBar-sort-options\">\n                <a>Sort By:</a>\n                <ul>\n                  {this.renderSortByOptions()}\n                </ul>\n              </div>\n              <div className=\"SearchBar-submit\">\n                <button onClick={this.handleSearch}>Search</button>\n              </div>\n            </div>\n\n            {/* Getting yelp results, displaying them */}  \n            <Results businesses={this.state.businesses} />\n\n          </div> \n          {/* Second container holding map */}\n          <div className=\"map\">\n            {map}\n          </div>\n        </SplitPane>\n        </div>\n        \n\n      );\n    }\n  }\n \nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyCYyV1rEug5GYFReqiADFE2r4R1n7OBcwo'\n})(businessSearch);","const apiKey = 'X7kF378rDNoIOuIImg6BmZhQIzCv8uxYMQ4f721NMU2K2XRSX1gSOOGf85lY-1VufBz0H0JsJiPlOAZQ396Vnc9duDqxfkJowmwrINUoLWiGBlHqY1Z2JnDf4NlSXnYx';\n\nconst CurrentYelp = {\n    search(term, latitude, longitude, sortBy) {\n        return fetch(`https://cors-anywhere.herokuapp.com/https://api.yelp.com/v3/businesses/search?term=${term}&latitude=${latitude}&longitude=${longitude}&sort_by=${sortBy}`, {\n            headers: {\n                Authorization: `Bearer ${apiKey}`\n            }\n        })\n            .then(response => {\n                return response.json();\n            }).then(jsonResponse => {\n                if (jsonResponse.businesses) {\n                    return jsonResponse.businesses.map(business => ({\n                        id: business.id,\n                        imageSrc: business.image_url,\n                        name: business.name,\n                        address: business.location.address1,\n                        city: business.location.city,\n                        state: business.location.state,\n                        zipCode: business.location.zip_code,\n                        category: business.categories[0].title,\n                        rating: business.rating,\n                        reviewCount: business.review_count,\n                        latitude: business.coordinates.latitude,\n                        longitude: business.coordinates.longitude,\n                        url: business.url,\n                        phone: business.display_phone,\n                        distance: business.distance,\n                        price: business.price,\n                        transactions: business.transactions\n                    })\n                    );\n                }\n            });\n\n\n    }\n}\n\nexport default CurrentYelp;\n","import React, { Component } from \"react\";\nimport CurrentYelp from '../Yelp/CurrentYelp.js';\nimport Results from \"../results/results.js\";\nimport './searchnearme.css';\nimport '../SearchBar/searchbar.css';\nimport SplitPane from 'react-split-pane';\nimport { Map, GoogleApiWrapper, InfoWindow, Marker } from 'google-maps-react';\nimport CurrentLocation from '../Maps/maps.js';\n\nconst mapStyles = {\n  width: '100%',\n  height: '100%'\n}\n\nexport class searchnearme extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      businesses: [],\n      region: [],\n      updateMap: false,\n      latitude: -1.2884,\n      longitude: 36.8233,\n      term: '',\n      location: 'New York City',\n      sortBy: 'best_match',\n      showingInfoWindow: false, \n      activeMarker: {},          \n      selectedPlace: {}\n    };\n    this.searchYelp = this.searchYelp.bind(this);\n\n    this.handleTermChange = this.handleTermChange.bind(this);\n    this.handleSearch = this.handleSearch.bind(this);\n    this.handleSortByChange = this.handleSortByChange.bind(this);\n    this.onMarkerClick = this.onMarkerClick.bind(this);\n    this.getCoordinates = this.getCoordinates.bind(this);\n\n    this.sortByOptions = {\n      'Best Match': 'best_match',\n      'Highest Rated': 'rating',\n      'Most Reviewed': 'review_count',\n      'Distance': 'distance'\n    };\n  }\n  /* Google Maps functions */\n  onMarkerClick = (props, marker, e) =>\n  this.setState({\n    selectedPlace: props,\n    activeMarker: marker,\n    showingInfoWindow: true\n  });\n  onClose = props => {\n    if (this.state.showingInfoWindow) {\n      this.setState({\n        showingInfoWindow: false,\n        activeMarker: null\n      });\n    }\n  };\n  /* Yelp functions */\n  searchYelp(term, latitude, longitude, sortBy) {\n    CurrentYelp.search(term, latitude, longitude, sortBy).then((businesses) => {\n      this.setState({\n        businesses: businesses,\n      });\n    })    \n  };\n\n  /* Search Bar functions */\n  getSortByClass(sortByOption) {\n    if (this.state.sortBy === sortByOption) {\n      return 'active';\n    }\n    return '';\n  }\n  handleSortByChange(sortByOption) {\n    this.setState({sortBy: sortByOption});\n  }\n  handleTermChange(event) {\n    this.setState({term: event.target.value});\n  }\n  getCoordinates(position) {\n    this.setState({\n      latitude: position.coords.latitude,\n      longitude: position.coords.longitude\n    })\n    this.searchYelp(this.state.term, this.state.latitude, this.state.longitude, this.state.sortBy);\n\n  }\n  handleSearch(event) {\n    if(navigator.geolocation){\n      navigator.geolocation.getCurrentPosition(this.getCoordinates);\n    } else {\n      alert(\"Geolocation is not supported by this brower.\")\n    }\n    this.setState({updateMap: true});\n    event.preventDefault();\n  }\n\n  renderSortByOptions() {\n    return Object.keys(this.sortByOptions).map(sortByOption => {\n      let sortByOptionValue = this.sortByOptions[sortByOption];\n      return (<ul> <button className={this.getSortByClass(sortByOptionValue)}\n                  key={sortByOptionValue}\n                  onClick={this.handleSortByChange.bind(this, sortByOptionValue)}>\n                {sortByOption}\n             </button> </ul>);\n    });\n  }\n\n  renderCenter(){\n      return (\n        <Map \n          google={this.props.google}\n          zoom={14}\n          style={mapStyles}\n          center= {{lat: this.state.latitude, lng: this.state.longitude}}\n        >\n        \n        {(this.state.businesses.map(business =>{\n           return(\n            <Marker key={business}\n              onClick={this.onMarkerClick}\n              name={business.name}\n              position={{lat: business.latitude, lng: business.longitude}}\n            >\n            </Marker>\n            )\n        }\n      ))}\n        <InfoWindow\n          marker={this.state.activeMarker}\n          visible={this.state.showingInfoWindow}\n          onClose={this.onClose}\n        >\n          <div>\n            <a>{this.state.selectedPlace.name}</a>\n          </div>\n        </InfoWindow>\n      </Map>\n      );\n  }\n\n  render() {\n      const updateMap = this.state.updateMap;\n      let map;\n\n      /* Conditional Rendering the map from current location to input */\n        if(updateMap){\n          map = (\n            <Map\n                google={this.props.google}\n                zoom={14}\n                style={mapStyles}\n                >\n                {this.renderCenter()}\n            </Map>\n          )\n\n        } \n        else{map = (\n          /* Default map to users location */\n          <CurrentLocation\n              google={this.props.google}\n              centerAroundCurrentLocation\n              style={mapStyles}\n              >\n              <Marker\n                onClick={this.onMarkerClick}\n                name={'current location'}\n              />\n              <InfoWindow\n                marker={this.state.activeMarker}\n                visible={this.state.showingInfoWindow}\n                onClose={this.onClose}\n              >\n                <div>\n                  <a>{this.state.selectedPlace.name}</a>\n                </div>\n              </InfoWindow>\n          </CurrentLocation>\n          );\n        }\n      \n      return(\n        <div className=\"searchnearme\">\n            \n        <SplitPane split=\"vertical\" defaultSize={700} >\n\n          {/* Main text */}\n          <div className=\"searchnearme-description\">\n            <h2>PLACES NEAR ME</h2>\n\n          {/* SEARCH BAR */}\n            <div className=\"SearchBar\">\n              <div className=\"SearchBar-fields\">\n                <ul>\n                  <input placeholder=\"Search Businesses\" onChange={this.handleTermChange} />\n                </ul>\n              </div>\n              <div className=\"SearchBar-sort-options\">\n                <a>Sort By:</a>\n                <ul>\n                  {this.renderSortByOptions()}\n                </ul>\n              </div>\n              <div className=\"SearchBar-submit\">\n                <button onClick={this.handleSearch}>Search</button>\n              </div>\n            </div>\n            \n            {/* Getting yelp results, displaying them */}  \n            <Results businesses={this.state.businesses} />\n\n          </div> \n          {/* Second container holding map */}\n          <div className=\"map\">\n            {map}\n          </div>\n        </SplitPane>\n        </div>\n        \n\n      );\n    }\n  }\n \nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyCYyV1rEug5GYFReqiADFE2r4R1n7OBcwo'\n})(searchnearme);","import React, { Component } from \"react\";\nimport './home.css';\nimport flowers from './flowers.jpg';\nimport peaches from './peaches.jpg';\nimport pastries from './pastries.jpg';\nimport waffles from './waffles.jpg';\nimport coffee from './coffee.jpeg';\nimport makeup from './makeup.jpg';\nimport hiking from './hiking.jpg';\nimport baloon from './baloon.jpeg';\nimport ferriswheel from './ferriswheel.jpg';\nimport beach from './beach.jpg';\n\nimport { Route, Link } from 'react-router-dom'; \nimport businessSearch from '../businessSearch/businessSearch.js'; \nimport searchnearme from '../searchnearme/searchnearme.js';\n\nclass Home extends Component {\n\n  render() {\n    return (\n        <div className=\"home\">\n          <Route exact path=\"/businessSearch\" component={businessSearch} />\n          <Route exact path=\"/searchnearme\" component={searchnearme} />\n\n          <div class=\"home-overlay\"></div>\n          <div class=\"home-description\">\n            <h1>Discover Great Experiences</h1>\n            <p>Choosing the right experience can be hard. We're here to help.</p>  \n            <div className=\"home-search-by\">\n              <div className=\"search-by-business\">\n                <h2>Flavors</h2>\n                <div className=\"business-images\">\n                  <img src={flowers} alt=\"Flowers\" />\n                  <img src={pastries} alt=\"Pastries\" />\n                  <img src={coffee} alt=\"Coffee\" />\n                  <img src={peaches} alt=\"Fruit\" />\n                  <img src={waffles} alt=\"Waffles\" />\n                  <img src={makeup} alt=\"Makeup\" />\n                  <img src={hiking} alt=\"Hiking\" />\n                  <img src={beach} alt=\"Beach\" />\n                  <img src={baloon} alt=\"Balloon\" />\n                  <img src={ferriswheel} alt=\"FerrisWheel\" />\n                </div>\n                <p>Search by product, service, experience, and everything in between</p>\n                <p1>Explore by:</p1>\n                <div className=\"search-container\">\n                  <Link to=\"/businessSearch\">\n                    <button>Location</button>\n                  </Link> \n                  <Link to=\"/searchnearme\">\n                    <button>Near Me</button>\n                  </Link> \n                </div>\n              </div>\n            </div>\n             \n            \n          </div>\n          \n        </div>\n    );\n  }\n}\n \nexport default Home;","import React, { Component } from 'react';\nimport rainbow from './rainbow.jpg';\n\nimport { BrowserRouter, Route, Link } from 'react-router-dom'; \nimport businessSearch from './businessSearch/businessSearch.js'; \nimport searchnearme from './searchnearme/searchnearme.js';\nimport home from './home/home.js';\n\nimport './App.css';\n\nclass App extends Component {\n  render() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n\n        {/* Navigation Bar */}\n        <nav className=\"navbar navbar-expand-md\">\n          <div className=\"navigation-sub\">\n            <Link to=\"/\" className=\"item\">\n              <img src={rainbow} className=\"logo-image\" alt=\"Logo\" />\n            </Link>\n\n            <Link to=\"/\" className=\"item\">Home</Link>\n            <Link to=\"/businessSearch\" className=\"item\">Location Search</Link>\n            <Link to=\"/searchnearme\" className=\"item\">Places Near Me</Link>\n\n          </div>\n        </nav>\n\n        {/* Page Content */}\n      <div className=\"main-container\">\n          {/* Routing different pages */}\n          <Route exact path=\"/businessSearch\" component={businessSearch} />\n          <Route exact path=\"/searchnearme\" component={searchnearme} />\n          <Route exact path=\"/\" component={home} />\n\n        {/* Footer */}\n        <footer className=\"page-footer\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-lg-8 col-md-8 col-sm-12\">\n                <h6 className=\"text-uppercase font-weight-bold\">Additional Information</h6>\n                <p>This website was created with Yelp's Fusion API.</p>\n                <p>For more information, please visit them at their website at Yelp.com</p>\n\n              </div>\n            \n            <div className=\"col-lg-4 col-md-4 col-sm-12\">\n              <h6 className=\"text-uppercase font-weight-bold\">Contact</h6>\n              <p>rebecca.shu@duke.edu \n              <br/>+1 (513) 602-0055\n              </p>\n            </div>\n          </div>\n          <div className=\"footer-copyright text-center\">© 2020 Copyright: MyWebsite.com</div>\n          </div>\n        </footer>\n        \n        </div>\n      </div>\n    </BrowserRouter>\n  );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}